pipeline {
    environment {
        REGISTRY_HOST = "registry.jee.vn"
        REGISTRY_PUBLISHER = "dps"
        REGISTRY_CRED = "registry"
        PROJECT_NAME = "notificationserver"
        DOMAIN = "jee.com.vn"
        SUBDOMAIN = "notification"
        STACK_NAME = "dpscore"

        PORT = "7000"
        MONGO_URI = "mongodb://root:mongotestpw123@mongo:27017/notification?authSource=admin&ssl=false"
        VAULT_ENDPOINT = "http://vault:8200"
        VAULT_TOKEN="s.NW5fjSuYvDXSl1IzAwzIjpQ0"
        KAFKA_BROKER="kafka:9999"
        ONESIGNAL_APPID="e306ec4a-df8c-439b-95fd-2f5e684f4f461"
        ONESIGNAL_APPKEY="NmE2ZmVkMjctMTdiZC00ZjdiLWE2ODYtMmUwMTA1ZjcxNTg21"
        ONESIGNAL_MOBILEID="d8eb87f2-994e-4941-949e-0a2990ee0cfc1"
        ONESIGNAL_MOBILEAPIKEY="ODkxNDM0NDYtZmFmOC00NTJiLTgxNDYtYzE5ZTJiMjYwZTc21"
        ONESIGNAL_MOBILEBMSID="526c811a-cd1f-4a68-89c6-df5e8d9bfa571"
        ONESIGNAL_MOBILEBMSAPIKEY="YWE3NmFhZTgtODAwYS00ZGYwLTkxNTQtODNiMmExNTA0NDNh1"
        ONESIGNAL_MOBILEWORKID="d2e9684d-e7dc-467b-b13b-9a900f3c7a7b"
        ONESIGNAL_MOBILEWORKAPIKEY="ODYxMzQ4ZmYtYjcwMC00MTJmLTllMmEtZmJiNzY0MTdjM2Fm"
        REDIS_HOST = "redis"
        REDIS_PORT = "6379"
        HOST_JEEACCOUNT_API = "http://jeeaccount_api"
        service = ""
        MONGO_URI_USER = "mongodb://root:mongotestpw123@mongo:27017/usermanagerment?authSource=admin&ssl=false"
    }
    agent any
    stages {
        stage('Clone repository') {
            steps {
                script {
                    checkout scm
                }
            }
        }
        stage('Build image') {
            steps {
                script {
                    service = docker.build("${REGISTRY_HOST}/${REGISTRY_PUBLISHER}/${PROJECT_NAME}:latest")
                }
            }
        }
        stage('Push image') {
            steps {
                script {
                    docker.withRegistry("https://${REGISTRY_HOST}", REGISTRY_CRED) {
                        service.push("latest")
                    }
                }
            }
        }
        stage('Stack deploy') {
            steps {
                script {
                    docker.withRegistry("https://${REGISTRY_HOST}", REGISTRY_CRED) {
                        dir("__BUILD__"){
                            sh "docker stack deploy -c swarm.yml --with-registry-auth ${STACK_NAME}"
                        }
                    }
                }
            }
        }
    }
}